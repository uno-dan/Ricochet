#!/bin/bash
#
################################################################################
#
[ -f $1 ] && {
	start_time=$(date +%s)

	source $1
	retval=0
	
	[ -f $tmp_file ] && rm -f $tmp_file
	[ -f $dst_dir/$db_name/*.sql ] && rm -f $dst_dir/$db_name/*.sql
	[ -f $dst_dir/$db_name/*.bz2 ] && rm -f $dst_dir/$db_name/*.bz2
	[ -f .results.log ] && rm -f .results.log

	
	echo "Backup results for database $db_name on $domain."  | tee -a $tmp_file
	echo "----------------------------------------------------------------------"  | tee -a $tmp_file

	./arcman.sh -q -u $db_usr -p $db_usr_pwd -d $db_name -h $host -f $domain -r $base -m 7 2>&1 | tee -a $tmp_file
	
	results=`cat .results.log | head -c 1`

	[[ $results -ne 0 ]] && {
		retval=1
		echo;echo "Backup of database $db_name did not complete successfully." | tee -a $tmp_file
	} || backup=`ls -r $dst_dir/$db_name/current/*_sql.tar.bz2 | tail -n 1`

	s=$[$(date +%s) - $start_time]; h=$[$s / 3600]; s=$[$s - $[$h * 3600]]; m=$[$s / 60]; s=$[$s - $[m * 60]]
	[ "$h" != '0' ] && hours=" $h hours" || hours=""
	[ "$m" != '0' ] && minutes=" $m minutes and" || minutes=""

	echo;echo "Total backup time$hours$minutes $s seconds." | tee -a $tmp_file
	size=$((`stat --printf="%s" $backup`))
	echo "Total backup size `echo $size | sed -r ':L;s=\b([0-9]+)([0-9]{3})\b=\1,\2=g;t L'` Bytes." | tee -a $tmp_file
	echo

	[[ $results -eq 0 ]] && state="Successful" || state="Failed"
	(cat $tmp_file) | mailx -r "$email_from ($email_from_nice_name)" -s "'MySQL database backup ($state!)' `date`" "$email_recipients"
	[ -f "$tmp_file" ] && rm -f $tmp_file
} || {
	echo
	echo "Can't find the configutation file $1!"
	echo
}
#